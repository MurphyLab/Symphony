function [outputPath, parentLabel, label, keywords, source, properties] = newEpochGroup()
    handles.outputPath = '';
    handles.parentLabel = '';
    handles.label = '';
    handles.keywords = '';
    handles.source = '';
    handles.properties = [];
    
    % TODO: UI for these...
    handles.properties.mouseID = '123';
    handles.properties.cellID = '456';
    handles.properties.rigName = 'A';
    
    parentDir = fileparts(mfilename('fullpath'));
    handles.sourceRoot = loadSources(fullfile(parentDir, 'SourceHierarchy.txt'));
    
    handles.figure = dialog(...
        'Units', 'points', ...
        'Name', 'New Epoch Group', ...
        'Position', centerWindowOnScreen(450, 340), ...
        'WindowKeyPressFcn', @(hObject, eventdata)keyPressCallback(hObject, eventdata, guidata(hObject)), ...
        'Tag', 'figure');
    
    % Output path controls
    uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'right', ...
        'Position', [10 300 100 18], ...
        'String',  'Output path:',...
        'Style', 'text');
    handles.outputPathEdit = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'left', ...
        'Position', [115 300 295 26], ...
        'String',  getpref('SymphonyEpochGroup', 'LastChosenOutputPath', ''),...
        'Style', 'edit', ...
        'Tag', 'outputPathEdit');
    handles.outputPathButton = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'Callback', @(hObject,eventdata)pickOutputPath(hObject,eventdata,guidata(hObject)), ...
        'Position', [412 303 25 20], ...
        'String', '...', ...
        'Tag', 'cancelButton');
    
    % Parent Label controls
    uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'right', ...
        'Position', [10 270 100 18], ...
        'String',  'Parent Label:',...
        'Style', 'text');
    handles.parentLabelEdit = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'left', ...
        'Position', [115 270 325 26], ...
        'String',  getpref('SymphonyEpochGroup', 'LastChosenParentLabel', ''),...
        'Style', 'edit', ...
        'Tag', 'parentLabelEdit');
    
    % Label controls
    uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'right', ...
        'Position', [10 240 100 18], ...
        'String',  'Label:',...
        'Style', 'text');
    handles.labelEdit = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'left', ...
        'Position', [115 240 325 26], ...
        'String',  getpref('SymphonyEpochGroup', 'LastChosenLabel', ''),...
        'Style', 'edit', ...
        'Tag', 'labelEdit');
    
    % Keyword controls
    uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'right', ...
        'Position', [10 210 100 18], ...
        'String',  'Keywords:',...
        'Style', 'text');
    handles.keywordsEdit = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'left', ...
        'Position', [115 210 325 26], ...
        'String',  getpref('SymphonyEpochGroup', 'LastChosenKeywords', ''),...
        'Style', 'edit', ...
        'Tag', 'keywordsEdit');
    
    % Source controls
    uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'FontSize', 12,...
        'HorizontalAlignment', 'right', ...
        'Position', [10 182 100 18], ...
        'String',  'Source:',...
        'Style', 'text');
    rootNode = uitreenode('v0', handles.sourceRoot.path(), handles.sourceRoot.name, [], false);
    rootNode.UserData = handles.sourceRoot;
    handles.sourceTree = uitree('v0', ...
        'Parent', handles.figure, ...
        'Position', [115 40 325 160], ...
        'Root', rootNode, ...
        'ExpandFcn', {@sourceHierarchyExpandFcn, handles}); %, ...
        %'SelectionChangeFcn', @sourceHierarchySelectFcn);
    
    handles.cancelButton = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'Callback', @(hObject,eventdata)cancelNewGroup(hObject,eventdata,guidata(hObject)), ...
        'Position', [450-10-56-10-56 10 56 20], ...
        'String', 'Cancel', ...
        'Tag', 'cancelButton');
    
    handles.saveButton = uicontrol(...
        'Parent', handles.figure,...
        'Units', 'points', ...
        'Callback', @(hObject,eventdata)saveNewGroup(hObject,eventdata,guidata(hObject)), ...
        'Position', [450-10-56 10 56 20], ...
        'String', 'Save', ...
        'Tag', 'saveButton');
    
    guidata(handles.figure, handles);
    
    % Restore the last chosen source if it's still available.
    sourcePath = getpref('SymphonyEpochGroup', 'LastChosenSourcePath', '');
    if isempty(sourcePath)
        lastChosenSource = handles.sourceRoot;
    else
        index = find([sourcePath ':'] == ':', 1, 'first');
        lastChosenSource = handles.sourceRoot.descendantAtPath(sourcePath(index + 1:end));
    end
    
    % Pre-expand all of the sources in the tree.
    % TODO: remember which ones the user closes?
    tree = handles.sourceTree.getTree;
    row = 0;
    while row < tree.getRowCount()
        tree.expandRow(row);
        
        % Select this row if it was the last one chosen.
        rowSource = tree.getPathForRow(row).getLastPathComponent.handle.UserData;
        if isequal(rowSource, lastChosenSource)
            tree.setSelectionRow(row);
        end
        
        row = row + 1;
        drawnow;
    end
    
    % Wait until the user clicks the cancel or save button.
    uiwait
    
    handles = guidata(handles.figure);
    outputPath = handles.outputPath;
    parentLabel = handles.parentLabel;
    label = handles.label;
    keywords = handles.keywords;
    source = handles.source;
    properties = handles.properties;
    
    close(handles.figure);
end


function rootSource = loadSources(sourcesPath)
    fid = fopen(sourcesPath);
    sourceText = fread(fid, '*char');
    fclose(fid);
    
    sourceLines = regexp(sourceText', '\n', 'split')';
    
    rootSource = Source(sourceLines{1});
    curPath = rootSource;
    
    for i = 2:length(sourceLines)
        line = sourceLines{i};
        if ~isempty(line)
            indent = 0;
            while strcmp(line(1), char(9))
                line = line(2:end);
                indent = indent + 1;
            end
            curPath = curPath(1:indent);
            source = Source(line, curPath(end));
            curPath(end + 1) = source; %#ok<AGROW>
        end
    end
end


function nodes = sourceHierarchyExpandFcn(~, sourcePath, handles)
    index = find([sourcePath ':'] == ':', 1, 'first');
    node = handles.sourceRoot.descendantAtPath(sourcePath(index + 1:end));
    for i = 1:length(node.children)
        child = node.children(i);
        nodes(i) = uitreenode('v0', child.path(), child.name, [], isempty(child.children)); %#ok<AGROW>
        nodes(i).UserData = child; %#ok<AGROW>
    end
end


function keyPressCallback(hObject, eventdata, handles)
    if strcmp(eventdata.Key, 'return')
        % Move focus off of any edit text so the changes can be seen.
        uicontrol(handles.saveButton);
        
        saveNewGroup(hObject, eventdata, handles);
    elseif strcmp(eventdata.Key, 'escape')
        cancelNewGroup(hObject, eventdata, handles);
    end
end


function pickOutputPath(~, ~, handles)
    pickedDir = uigetdir();
    
    if pickedDir ~= 0
        set(handles.outputPathEdit, 'String', pickedDir)
    end
end


function cancelNewGroup(~, ~, ~)
    uiresume
end


function saveNewGroup(~, ~, handles)
    % TODO: validate inputs
    handles.outputPath = get(handles.outputPathEdit, 'String');
    handles.parentLabel = get(handles.parentLabelEdit, 'String');
    handles.label = get(handles.labelEdit, 'String');
    handles.keywords = get(handles.keywordsEdit, 'String');
    selectedSourceNode = handles.sourceTree.getSelectedNodes();
    handles.source = selectedSourceNode(1).handle.UserData;
    guidata(handles.figure, handles);
    
    % Remember these settings for the next time a group is created.
    setpref('SymphonyEpochGroup', 'LastChosenOutputPath', handles.outputPath)
    setpref('SymphonyEpochGroup', 'LastChosenParentLabel', handles.parentLabel)
    setpref('SymphonyEpochGroup', 'LastChosenLabel', handles.label)
    setpref('SymphonyEpochGroup', 'LastChosenKeywords', handles.keywords)
    setpref('SymphonyEpochGroup', 'LastChosenSourcePath', handles.source.path())
% TODO:    setpref('SymphonyEpochGroup', 'LastChosenProperties', handles.properties)
    
    uiresume
end
